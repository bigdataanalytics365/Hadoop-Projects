// Useful site
// https://www.ibm.com/developerworks/data/library/techarticle/dm-1204infostreamsfeatures2/

namespace ChildSafety;

type Child = tuple<rstring time, rstring childId, rstring parentName, rstring childName, rstring phone>;	// Child data tuple as read in from the csv file.
type Sensor = tuple<rstring time, rstring sensorId, rstring childId, rstring fromRoom, rstring toRoom>;		// Sensor Data Type tuple as read in from the csv file.
type LocationLog = tuple<rstring time, rstring childId, rstring currentRoom>;					// LocationLog.txt
type MissingChild = tuple<rstring time, rstring childId, rstring lastTime, rstring lastRoom, rstring phone>;	// MissingChildAlert.txt
type DangerRoom = tuple<rstring time, rstring childId, rstring phone>;						// UnsafeRoomAlert.txt
type RoomHourStat = tuple<rstring time, rstring roomNumber, rstring numChildren>;				// RoomStats.txt
type ChildHourStat = tuple<rstring time, rstring childId, rstring numRooms>;					// ChildStats.txt

float64 getDiscount(float64 x){
	if(x < 500.00f){
		return x * 0.01f;
	}
	if(x < 1000.00f){
		return x * 0.02f;
	}
	return x * 0.05f;
} // End of function updateCounts

composite ChildSafety {
	graph
		stream <Child> ChildData = FileSource() {
			param
				format: csv;
				file: getSubmissionTimeValue("childFile");
				hasHeaderLine : false;
				// file		: "ChildDetails.csv";
		} // End of FileSource ChildData.

		stream <Sensor> SensorData = FileSource() {
			param
				format: csv;
				file: getSubmissionTimeValue("sensorFile");
				hasHeaderLine: false;
				// file : "SensorData.csv"
		} // End of FileSource SensorData.
		
		stream <LocationLog> Results = Functor(ChildData) {
			logic 
				state : {
						list<Child> childData = [];
					}
			onTuple ChildData: {
					mutable Child tempChild = {
						time = time,
						childId = childId,
						parentName = parentName,
						childName = childName,
						phone = phone
					};
					appendM(childData, tempChild);
					} 
			// output Results : customerName = concat(concat(firstName, " "), lastName), discount = getDiscount(amount);
		} // End Results
		
		() as Sink = FileSink(Results){
			param
				file : "LocationLog.txt";
		} // End of FileSink for Numbered
} // End of ChildSafety.
